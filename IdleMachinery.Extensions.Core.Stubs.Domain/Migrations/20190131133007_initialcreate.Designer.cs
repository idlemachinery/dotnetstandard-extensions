// <auto-generated />
using System;
using IdleMachinery.Extensions.Core.Stubs.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IdleMachinery.Extensions.Core.Stubs.Domain.Migrations
{
    [DbContext(typeof(DomainDbContext))]
    [Migration("20190131133007_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdleMachinery.Extensions.Standard.Stubs.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("IdleMachinery.Extensions.Standard.Stubs.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId");

                    b.Property<string>("Reference");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("IdleMachinery.Extensions.Standard.Stubs.Domain.OrderProduct", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("IdleMachinery.Extensions.Standard.Stubs.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("IdleMachinery.Extensions.Standard.Stubs.Domain.Customer", b =>
                {
                    b.OwnsOne("IdleMachinery.Extensions.Standard.Stubs.Domain.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("Created")
                                .HasColumnName("Audit_Created");

                            b1.Property<DateTime>("Updated")
                                .HasColumnName("Audit_Updated");

                            b1.Property<string>("User")
                                .HasColumnName("Audit_User");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.HasOne("IdleMachinery.Extensions.Standard.Stubs.Domain.Customer")
                                .WithOne("Audit")
                                .HasForeignKey("IdleMachinery.Extensions.Standard.Stubs.Domain.Audit", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("IdleMachinery.Extensions.Standard.Stubs.Domain.Order", b =>
                {
                    b.HasOne("IdleMachinery.Extensions.Standard.Stubs.Domain.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("IdleMachinery.Extensions.Standard.Stubs.Domain.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("Created")
                                .HasColumnName("Audit_Created");

                            b1.Property<DateTime>("Updated")
                                .HasColumnName("Audit_Updated");

                            b1.Property<string>("User")
                                .HasColumnName("Audit_User");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.HasOne("IdleMachinery.Extensions.Standard.Stubs.Domain.Order")
                                .WithOne("Audit")
                                .HasForeignKey("IdleMachinery.Extensions.Standard.Stubs.Domain.Audit", "OrderId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("IdleMachinery.Extensions.Standard.Stubs.Domain.OrderProduct", b =>
                {
                    b.HasOne("IdleMachinery.Extensions.Standard.Stubs.Domain.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IdleMachinery.Extensions.Standard.Stubs.Domain.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
